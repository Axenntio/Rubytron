name: Compile
on:
  push:
    branches:
      - main
jobs:
  linux-runtime:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y git g++ libsfml-dev meson ruby xxd
    - name: Copy mruby config file
      run: cp rubytron.rb mruby/build_config/.
    - name: Compile mruby
      run: |
        cd mruby
        MRUBY_CONFIG=rubytron rake
    - name: Setup Rubytron
      run: meson setup build
    - name: Compile Rubytron
      run: ninja -C build
    - name: Upload Linux Runtime Header
      uses: actions/upload-artifact@v3
      with:
        name: linux-runtime-header
        path: build/src/Editor/runtime-linux.h

  macos-runtime:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install meson sfml openal-soft
    - name: Copy mruby config file
      run: cp rubytron.rb mruby/build_config/.
    - name: Compile mruby
      run: |
        cd mruby
        MRUBY_CONFIG=rubytron rake
    - name: Setup Rubytron
      run: |
        PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:$(brew --prefix openal)-soft/lib/pkgconfig" meson setup build
    - name: Compile Rubytron
      run: ninja -C build
    - name: Upload macOS Runtime Header
      uses: actions/upload-artifact@v3
      with:
        name: macos-runtime-header
        path: build/src/Editor/runtime-darwin.h

  linux:
    needs: [
      linux-runtime,
      macos-runtime
    ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y git g++ libsfml-dev meson ruby xxd
    - name: Copy mruby config file
      run: cp rubytron.rb mruby/build_config/.
    - name: Compile mruby
      run: |
        cd mruby
        MRUBY_CONFIG=rubytron rake
    - name: Setup Rubytron
      run: meson setup build -Dcpp_args=-DMULTI_EXPORT
    - uses: actions/download-artifact@v2
      with:
        name: macos-runtime-header
        path: build/src/Editor
    - name: Compile Rubytron
      run: ninja -C build
    - name: Make Linux bundle
      run: |
        mkdir bundle
        cp build/src/Editor/rubytron bundle/.
        cp -r programs bundle/.
    - name: Upload Linux bundle
      uses: actions/upload-artifact@v3
      with:
        name: rubytron-linux
        path: bundle
        retention-days: 5

  macos:
    needs: [
      linux-runtime,
      macos-runtime
    ]
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install meson sfml openal-soft
    - name: Copy mruby config file
      run: cp rubytron.rb mruby/build_config/.
    - name: Compile mruby
      run: |
        cd mruby
        MRUBY_CONFIG=rubytron rake
    - name: Setup Rubytron
      run: |
        PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:$(brew --prefix openal-soft)/lib/pkgconfig" meson setup build -Dcpp_args=-DMULTI_EXPORT
    - uses: actions/download-artifact@v2
      with:
        name: linux-runtime-header
        path: build/src/Editor
    - name: Compile Rubytron
      run: ninja -C build
    - name: Create macOS app
      run: |
        mkdir bundle && cd bundle
        mkdir -p Rubytron.app/Contents/MacOS
        mkdir -p Rubytron.app/Contents/Resources
        echo -e '<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n  <key>CFBundleGetInfoString</key>\n  <string>Rubytron</string>\n  <key>CFBundleExecutable</key>\n  <string>launch.sh</string>\n  <key>CFBundleIdentifier</key>\n  <string>com.axenntio.rubytron</string>\n  <key>CFBundleName</key>\n  <string>rubytron</string>\n  <key>CFBundleIconFile</key>\n  <string>rubytron.icns</string>\n  <key>CFBundleShortVersionString</key>\n  <string>0.01</string>\n  <key>CFBundleInfoDictionaryVersion</key>\n  <string>6.0</string>\n  <key>CFBundlePackageType</key>\n  <string>APPL</string>\n  <key>IFMajorVersion</key>\n  <integer>0</integer>\n  <key>IFMinorVersion</key>\n  <integer>1</integer>\n</dict>\n</plist>' > Rubytron.app/Contents/Info.plist
        cp ../build/src/Editor/rubytron Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix sfml)/lib/libsfml-graphics.2.5.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix sfml)/lib/libsfml-window.2.5.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix sfml)/lib/libsfml-system.2.5.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix sfml)/lib/libsfml-audio.2.5.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix libvorbis)/lib/libvorbis.0.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix libvorbis)/lib/libvorbisenc.2.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix libvorbis)/lib/libvorbisfile.3.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix libogg)/lib/libogg.0.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix flac)/lib/libFLAC.12.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix freetype)/lib/libfreetype.6.dylib Rubytron.app/Contents/MacOS/.
        cp $(brew --prefix libpng)/lib/libpng16.16.dylib Rubytron.app/Contents/MacOS/.
        install_name_tool -change $(brew --prefix sfml)/lib/libsfml-graphics.2.5.dylib @executable_path/libsfml-graphics.2.5.dylib Rubytron.app/Contents/MacOS/rubytron
        install_name_tool -change $(brew --prefix sfml)/lib/libsfml-window.2.5.dylib @executable_path/libsfml-window.2.5.dylib Rubytron.app/Contents/MacOS/rubytron
        install_name_tool -change $(brew --prefix sfml)/lib/libsfml-system.2.5.dylib @executable_path/libsfml-system.2.5.dylib Rubytron.app/Contents/MacOS/rubytron
        install_name_tool -change $(brew --prefix sfml)/lib/libsfml-audio.2.5.dylib @executable_path/libsfml-audio.2.5.dylib Rubytron.app/Contents/MacOS/rubytron
        install_name_tool -change $(brew --prefix libvorbis)/lib/libvorbis.0.dylib @executable_path/libvorbis.0.dylib Rubytron.app/Contents/MacOS/libsfml-audio.2.5.dylib
        install_name_tool -change $(brew --prefix libvorbis)/lib/libvorbisenc.2.dylib @executable_path/libvorbisenc.2.dylib Rubytron.app/Contents/MacOS/libsfml-audio.2.5.dylib
        install_name_tool -change $(brew --prefix libvorbis)/lib/libvorbisfile.3.dylib @executable_path/libvorbisfile.3.dylib Rubytron.app/Contents/MacOS/libsfml-audio.2.5.dylib
        install_name_tool -change $(brew --prefix libogg)/lib/libogg.0.dylib @executable_path/libogg.0.dylib Rubytron.app/Contents/MacOS/libsfml-audio.2.5.dylib
        install_name_tool -change $(brew --prefix flac)/lib/libFLAC.12.dylib @executable_path/libFLAC.12.dylib Rubytron.app/Contents/MacOS/libsfml-audio.2.5.dylib
        install_name_tool -change $(brew --prefix freetype)/lib/libfreetype.6.dylib @executable_path/libfreetype.6.dylib Rubytron.app/Contents/MacOS/libsfml-graphics.2.5.dylib
        install_name_tool -change $(brew --prefix libpng)/lib/libpng16.16.dylib @executable_path/libpng16.16.dylib Rubytron.app/Contents/MacOS/libfreetype.6.dylib
        install_name_tool -change $(brew --prefix libogg)/lib/libogg.0.dylib @executable_path/libogg.0.dylib Rubytron.app/Contents/MacOS/libFLAC.12.dylib
        install_name_tool -change $(brew --prefix libogg)/lib/libogg.0.dylib @executable_path/libogg.0.dylib Rubytron.app/Contents/MacOS/libvorbis.0.dylib
        install_name_tool -change $(brew --prefix libogg)/lib/libogg.0.dylib @executable_path/libogg.0.dylib Rubytron.app/Contents/MacOS/libvorbisenc.2.dylib
        install_name_tool -change $(brew --prefix)/Cellar/libvorbis/1.3.7/lib/libvorbis.0.dylib @executable_path/libvorbis.0.dylib Rubytron.app/Contents/MacOS/libvorbisenc.2.dylib
        install_name_tool -change $(brew --prefix libogg)/lib/libogg.0.dylib @executable_path/libogg.0.dylib Rubytron.app/Contents/MacOS/libvorbisfile.3.dylib
        install_name_tool -change $(brew --prefix)/Cellar/libvorbis/1.3.7/lib/libvorbis.0.dylib @executable_path/libvorbis.0.dylib Rubytron.app/Contents/MacOS/libvorbisfile.3.dylib
        cp -r ../programs Rubytron.app/Contents/MacOS/.
        echo -e '#!/bin/bash\ncd "${0%/*}"\n./rubytron' > Rubytron.app/Contents/MacOS/launch.sh
        chmod +x Rubytron.app/Contents/MacOS/launch.sh
        xattr -c Rubytron.app
    - name: Create macOS DMG
      run: |
        hdiutil create /tmp/tmp.dmg -ov -volname "Rubytron" -fs HFS+ -srcfolder bundle
        hdiutil convert /tmp/tmp.dmg -format UDZO -o Rubytron.dmg
    - name: Upload macOS app
      uses: actions/upload-artifact@v3
      with:
        name: rubytron-macos
        path: Rubytron.dmg
        retention-days: 5